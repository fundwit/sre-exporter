// Code generated by MockGen. DO NOT EDIT.
// Source: oss/oss_client.go

// Package oss is a generated GoMock package.
package oss

import (
	reflect "reflect"

	oss "github.com/aliyun/aliyun-oss-go-sdk/oss"
	gomock "github.com/golang/mock/gomock"
)

// MockObjectLister is a mock of ObjectLister interface.
type MockObjectLister struct {
	ctrl     *gomock.Controller
	recorder *MockObjectListerMockRecorder
}

// MockObjectListerMockRecorder is the mock recorder for MockObjectLister.
type MockObjectListerMockRecorder struct {
	mock *MockObjectLister
}

// NewMockObjectLister creates a new mock instance.
func NewMockObjectLister(ctrl *gomock.Controller) *MockObjectLister {
	mock := &MockObjectLister{ctrl: ctrl}
	mock.recorder = &MockObjectListerMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockObjectLister) EXPECT() *MockObjectListerMockRecorder {
	return m.recorder
}

// ListObjects mocks base method.
func (m *MockObjectLister) ListObjects(bucket string, options ...oss.Option) (*oss.ListObjectsResult, error) {
	m.ctrl.T.Helper()
	varargs := []interface{}{bucket}
	for _, a := range options {
		varargs = append(varargs, a)
	}
	ret := m.ctrl.Call(m, "ListObjects", varargs...)
	ret0, _ := ret[0].(*oss.ListObjectsResult)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// ListObjects indicates an expected call of ListObjects.
func (mr *MockObjectListerMockRecorder) ListObjects(bucket interface{}, options ...interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	varargs := append([]interface{}{bucket}, options...)
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ListObjects", reflect.TypeOf((*MockObjectLister)(nil).ListObjects), varargs...)
}
